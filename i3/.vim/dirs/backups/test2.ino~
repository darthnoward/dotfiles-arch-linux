#include <Servo.h>
Servo servo1;
#define in1 2
#define in2 4
#define pwm 5
#define stby 3
#define clk A0
#define dt A1
void start(int speed);
void stop();
void encoder();
long encoderValue;
long encoderValue1;
long counter = 0;
long counter1 = 0;
int count = 0;
int init_time, start_value, end_value;
unsigned long time1;
#define LDR A5
int get_rpm(int time_interval);
void setup() {
  servo1.attach(6);
  pinMode(in1, OUTPUT);
  pinMode(in2, OUTPUT);
  pinMode(pwm, OUTPUT);
  pinMode(stby, OUTPUT);
  pinMode(clk, INPUT);
  pinMode(dt, INPUT);
  pinMode(LDR, INPUT);
  encoderValue = digitalRead(clk);
  encoderValue1 = digitalRead(dt);
  Serial.begin(9600);
}

void loop() {
  /*servo1.write(105);
    delay(1000);
    servo1.write(255);
    delay(1000);*/
  /*if ((millis() - time1) < 10000) {
    start(255);
    temp = counter;
    }
    else start(50);
    if ((millis() - time1) > 20000) {
    stop();
    Serial.print(temp);
    Serial.println("\n");
    }*/

  /*encoder(digitalRead(clk));
    encoder1(digitalRead(dt));
    Serial.print("clk: ");
    Serial.print(counter);
    Serial.print("\n");
    Serial.print("dt:  ");
    Serial.print(counter1);
    Serial.print("\n\n");*/
//  Serial.println(count);
  start(255);
  /*if ((millis()-300) > time1){
    if (analogRead(LDR) < 150) {
      count++;
      time1 = millis();
    }
  }*/
  Serial.println(get_rpm(10000));
}

void start(int speed) {
  digitalWrite(stby, HIGH);
  analogWrite(pwm, speed);
  digitalWrite(in1, HIGH);
  digitalWrite(in2, LOW);
}

void stop() {
  digitalWrite(stby, LOW);
}
void encoder(int read) {
  if (read != encoderValue) {
    counter++;
    encoderValue = read;
  }
}

void encoder1(int read) {
  if (read != encoderValue1) {
    counter1++;
    encoderValue1 = read;
  }
}

int get_rpm(int time_interval){
  init_time = millis();
  time1 = init_time;
  while (millis() < (time_interval+init_time+1000)){
    //Serial.println(millis());
    //Serial.println(count);
    if ((millis()-300) > time1){
      if (analogRead(LDR) < 150) {
        count++;
        time1 = millis();
      }
    if (((millis() - init_time) > 300) && ((millis() - init_time) < 900)) start_value = count;
    if (((millis() - init_time) > (300 + time_interval)) && ((millis() - init_time) < (900 + time_interval))) end_value = count;
    }
  }
  time_interval = time_interval/1000;
  Serial.println(start_value);
  Serial.println(end_value);
  return ((end_value - start_value)*30/time_interval);
}
